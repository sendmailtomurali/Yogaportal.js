doctype html
html
  head
    title Add Attendance
    meta(name="viewport" content="width=device-width, initial-scale=1")
    script.
      function preventDuplicateSelection() {
        let selects = document.querySelectorAll("select");
        selects.forEach(select => {
          select.addEventListener("change", () => {
            let selectedValues = new Set();
            selects.forEach(s => {
              if (s.value) selectedValues.add(s.value);
            });

            selects.forEach(s => {
              for (let option of s.options) {
                if (option.value && selectedValues.has(option.value) && s.value !== option.value) {
                  option.disabled = true;
                } else {
                  option.disabled = false;
                }
              }
            });
          });
        });
      }
      function selectActivity(level) {
        document.getElementById("activity").value = level;

        document.querySelectorAll('.level img').forEach(img => img.classList.remove('selected'));

        document.getElementById(level.toLowerCase()).classList.add('selected');
      }
      window.onload = preventDuplicateSelection;
    
    style.
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: 'Arial', sans-serif;
        background-color: #F7F4F1;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      .form-container {
        width: 90%;
        max-width: 900px;
        height: auto;
        background-color: #ECE7E1;
        border: 1px solid #D5C6B8;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.05);
      }
      .form-sections {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        width: 100%;
      }
      .left-section, .right-section {
        width: 48%;
      }
      .levels {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 10px;
      }
      .level {
        text-align: center;
        cursor: pointer;
      }
      .tag {
        display: block;
        background-color: #7A8C99;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 14px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 5px;
        width: fit-content;
        margin-left: auto;
        margin-right: auto;
      }
      .level img {
        width: 150px;
        height: 150px;
        object-fit: cover;
        border-radius: 10px;
        border: 2px solid #D5C6B8;
        padding: 5px;
        background-color: #FAF3EC;
        display: block;
        margin: 0 auto;
        transition: transform 0.2s, border-color 0.2s;
      }
      .level img:hover {
        transform: scale(1.05);
        border-color: #7A8C99;
      }
      .level img.selected {
        border: 3px solid #4A6572;
        transform: scale(1.1);
      }
      @media (max-width: 768px) {
        .form-sections {
          flex-direction: column;
        }
        .left-section, .right-section {
          width: 100%;
        }
        .levels {
          flex-direction: column;
          align-items: center;
        }
      }
  body
    h1 Add Attendance
    form(action="/addAttendance" method="post" class="form-container")
      .form-sections
        .left-section
          label(for="date") Date:
          input(type="date" name="date" required)

          label(for="time") Time:
          input(type="time" name="time" required step="1")

        .right-section
          each n in [1, 2, 3]
            label(for=`user${n}`) User #{n}:
            select(name=`user${n}`)
              option(value="") Select a user
              each user in users
                option(value=user.name)= user.name
      
      input(type="hidden" name="activity" id="activity" required)

      .container
        .levels
          .level(onclick="selectActivity('Beginner')")
            .tag Beginner
            img#beginner(src="/images/begineer.jpg" alt="Beginner Level Pose")

          .level(onclick="selectActivity('Intermediate')")
            .tag Intermediate
            img#intermediate(src="/images/intermediate.png" alt="Intermediate Level Pose")

          .level(onclick="selectActivity('Advanced')")
            .tag Advanced
            img#advanced(src="/images/advanced.png" alt="Advanced Level Pose")

      .submit-container
        input(type="submit" value="Add Attendance")




